import { useTranslation } from "react-i18next";
import s from "./PaymentForm.module.scss";

const PaymentForm = ({
  paymentMethod,
  onPaymentMethodChange,
  shippingInfo,
  onShippingInfoChange,
  onSubmit
}) => {
  const { t } = useTranslation();

  const paymentMethods = [
    {
      id: "credit-card",
      name: t("payment.creditCard", "Th·∫ª t√≠n d·ª•ng"),
      icon: "üí≥"
    },
    {
      id: "paypal",
      name: t("payment.paypal", "PayPal"),
      icon: "üÖøÔ∏è"
    },
    {
      id: "bank-transfer",
      name: t("payment.bankTransfer", "Chuy·ªÉn kho·∫£n ng√¢n h√†ng"),
      icon: "üè¶"
    },
    {
      id: "cod",
      name: t("payment.cod", "Thanh to√°n khi nh·∫≠n h√†ng"),
      icon: "üíµ"
    }
  ];

  const handleInputChange = (field) => (e) => {
    onShippingInfoChange(field, e.target.value);
  };

  return (
    <div className={s.paymentForm}>
      {/* Shipping Information */}
      <div className={s.section}>
        <h3>{t("payment.shippingInfo", "Th√¥ng tin giao h√†ng")}</h3>
        <div className={s.formGrid}>
          <div className={s.inputGroup}>
            <label htmlFor="fullName">
              {t("payment.fullName", "H·ªç v√† t√™n")} *
            </label>
            <input
              type="text"
              id="fullName"
              value={shippingInfo.fullName}
              onChange={handleInputChange("fullName")}
              placeholder={t("payment.fullNamePlaceholder", "Nh·∫≠p h·ªç v√† t√™n")}
              required
            />
          </div>

          <div className={s.inputGroup}>
            <label htmlFor="email">
              {t("payment.email", "Email")} *
            </label>
            <input
              type="email"
              id="email"
              value={shippingInfo.email}
              onChange={handleInputChange("email")}
              placeholder={t("payment.emailPlaceholder", "example@email.com")}
              required
            />
          </div>

          <div className={s.inputGroup}>
            <label htmlFor="phone">
              {t("payment.phone", "S·ªë ƒëi·ªán tho·∫°i")} *
            </label>
            <input
              type="tel"
              id="phone"
              value={shippingInfo.phone}
              onChange={handleInputChange("phone")}
              placeholder={t("payment.phonePlaceholder", "0123456789")}
              required
            />
          </div>

          <div className={s.inputGroup}>
            <label htmlFor="address">
              {t("payment.address", "ƒê·ªãa ch·ªâ")} *
            </label>
            <input
              type="text"
              id="address"
              value={shippingInfo.address}
              onChange={handleInputChange("address")}
              placeholder={t("payment.addressPlaceholder", "S·ªë nh√†, t√™n ƒë∆∞·ªùng")}
              required
            />
          </div>

          <div className={s.inputGroup}>
            <label htmlFor="city">
              {t("payment.city", "Th√†nh ph·ªë")} *
            </label>
            <input
              type="text"
              id="city"
              value={shippingInfo.city}
              onChange={handleInputChange("city")}
              placeholder={t("payment.cityPlaceholder", "H·ªì Ch√≠ Minh")}
              required
            />
          </div>

          <div className={s.inputGroup}>
            <label htmlFor="zipCode">
              {t("payment.zipCode", "M√£ b∆∞u ƒëi·ªán")}
            </label>
            <input
              type="text"
              id="zipCode"
              value={shippingInfo.zipCode}
              onChange={handleInputChange("zipCode")}
              placeholder={t("payment.zipCodePlaceholder", "700000")}
            />
          </div>
        </div>
      </div>

      {/* Payment Method */}
      <div className={s.section}>
        <h3>{t("payment.paymentMethod", "Ph∆∞∆°ng th·ª©c thanh to√°n")}</h3>
        <div className={s.paymentMethods}>
          {paymentMethods.map((method) => (
            <div
              key={method.id}
              className={`${s.paymentOption} ${
                paymentMethod === method.id ? s.selected : ""
              }`}
              onClick={() => onPaymentMethodChange(method.id)}
            >
              <div className={s.methodIcon}>{method.icon}</div>
              <div className={s.methodInfo}>
                <span className={s.methodName}>{method.name}</span>
              </div>
              <div className={s.radioButton}>
                <input
                  type="radio"
                  name="paymentMethod"
                  value={method.id}
                  checked={paymentMethod === method.id}
                  onChange={() => onPaymentMethodChange(method.id)}
                />
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Credit Card Details */}
      {paymentMethod === "credit-card" && (
        <div className={s.section}>
          <h3>{t("payment.cardDetails", "Th√¥ng tin th·∫ª")}</h3>
          <div className={s.formGrid}>
            <div className={s.inputGroup}>
              <label htmlFor="cardNumber">
                {t("payment.cardNumber", "S·ªë th·∫ª")} *
              </label>
              <input
                type="text"
                id="cardNumber"
                placeholder="1234 5678 9012 3456"
                maxLength="19"
              />
            </div>

            <div className={s.inputGroup}>
              <label htmlFor="cardName">
                {t("payment.cardName", "T√™n tr√™n th·∫ª")} *
              </label>
              <input
                type="text"
                id="cardName"
                placeholder={t("payment.cardNamePlaceholder", "NGUYEN VAN A")}
              />
            </div>

            <div className={s.inputGroup}>
              <label htmlFor="expiryDate">
                {t("payment.expiryDate", "Ng√†y h·∫øt h·∫°n")} *
              </label>
              <input
                type="text"
                id="expiryDate"
                placeholder="MM/YY"
                maxLength="5"
              />
            </div>

            <div className={s.inputGroup}>
              <label htmlFor="cvv">
                {t("payment.cvv", "CVV")} *
              </label>
              <input
                type="text"
                id="cvv"
                placeholder="123"
                maxLength="4"
              />
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default PaymentForm;
